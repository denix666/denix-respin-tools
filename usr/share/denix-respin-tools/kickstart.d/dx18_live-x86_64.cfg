xconfig --startxonboot
part / --size 4096 --fstype ext4
auth --enableshadow --passalgo=sha512
lang en_US.UTF-8
keyboard us
timezone Europe/Vilnius --isUtc
firewall --enabled --service=ssh
selinux --disabled
services --enabled=postfix

repo --name=fedora --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=fedora-18&arch=x86_64
repo --name=updates --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=updates-released-f18&arch=x86_64
repo --name=denix-x --baseurl=http://fedora.os.vc/yum/base/x1/x86_64
repo --name=google-chrome --baseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64/
repo --name=google-talkplugin --baseurl=http://dl.google.com/linux/talkplugin/rpm/stable/x86_64
repo --name=adobe-linux --baseurl=http://linuxdownload.adobe.com/linux/x86_64/
repo --name=rpmfusion-free --mirrorlist=http://mirrors.rpmfusion.org/mirrorlist?repo=free-fedora-18&arch=x86_64
repo --name=rpmfusion-free-updates --mirrorlist=http://mirrors.rpmfusion.org/mirrorlist?repo=free-fedora-updates-released-18&arch=x86_64
repo --name=rpmfusion-nonfree --mirrorlist=http://mirrors.rpmfusion.org/mirrorlist?repo=nonfree-fedora-18&arch=x86_64
repo --name=rpmfusion-nonfree-updates --mirrorlist=http://mirrors.rpmfusion.org/mirrorlist?repo=nonfree-fedora-updates-released-18&arch=x86_64

############################################################################
%packages --excludedocs --nobase ###########################################
############################################################################

# Base packages
#####################################
@core
@base-x
@hardware-support
@printing
@admin-tools
@sound-and-video
@system-tools
@dial-up
@anaconda-tools
generic-release-notes

# KDE desktop
#####################################
@kde-desktop
system-config-printer-kde

# Maintenance utils
#####################################
anaconda
grub2
bash
mc
dracut
bash-completion
system-config-lvm
mcrypt
firewalld
authconfig
beesu
htop
isomaster
nrg2iso
engine_pkcs11
uniconvertor
gnupg2-smime
net-tools
kernel

# Fonts
#####################################
@fonts
@legacy-fonts

# Office
#####################################
libreoffice-writer
libreoffice-calc

# Internet
#####################################
thunderbird
thunderbird-enigmail
fetchmail
google-chrome-stable
google-talkplugin
rdesktop
mail-notification
ktorrent

# Sound and multimedia
#####################################
vlc
cheese
mpg321
libmpeg3
id3lib
ffmpeg
gstreamer-ffmpeg
gstreamer-plugins-bad
gstreamer-plugins-bad-nonfree
lame
flash-plugin
kaffeine

# Security Lab
#####################################
john
hping3
p0f
arp-scan
macchanger
nmbscan
tcpdump
ngrep
ncrack
iftop
nmap

# Programming
#####################################
geany
gcc-c++
gcc
dkms
rpmdevtools
git
ghex
PyQt4

# Archive tools
#####################################
rar
unrar
cabextract
p7zip

# Graphics
#####################################
gimp

# Denix stuff
#####################################
denix-x-repo
denix-skel
denix-sounds
denix-backgrounds
denix-prompt
denix-umask
denix-colors
denix-icons
denix-bash
denix-grub2-theme
denix-logos
system-setup-tools

# Server packages
#####################################
postfix
ntp

# Not needed
#####################################
-ql2100-firmware
-ql2200-firmware
-ql23xx-firmware
-ql2400-firmware
-abrt*
-xsane
-xsane-gimp
-sane-backends
-mpage
-sox
-hplip
-hpijs
-numactl
-isdn4k-utils
-autofs
-coolkey
-foomatic*
-ghostscript*
-ivtv-firmware
-fedora-release-notes
-irda-utils
-fprintd*
-aspell-*
-hunspell-*
-man-pages*
-words
-kernel*debug*
-kernel-devel
-sendmail
-AdobeReader*
-xterm
-PackageKit-zif
-zif
-kdeaccessibility*
-nhn-nanum-gothic-fonts
-vlgothic-fonts
-wqy-zenhei-fonts
-cjkuni-uming-fonts
-@input-methods
-scim*
-m17n*
-iok

############################################################################
%end #######################################################################
############################################################################

############################################################################
%post ######################################################################
############################################################################

# Disable SELinux
#################
sed -i 's/^SELINUX=.*$/SELINUX=disabled/g' /etc/selinux/config
setenforce 0

# Add rc.local compatibility
############################
echo "#! /bin/bash" > /etc/rc.d/rc.local
chmod 755 /etc/rc.d/rc.local

# Edit login.defs
#################
sed -i 's/^UID_MIN.*$/UID_MIN			1000/g' /etc/login.defs
sed -i 's/^GID_MIN.*$/GID_MIN			1000/g' /etc/login.defs

# Add issue message
###################
cat > /etc/issue << EOF_ISSUE
Welcome to DeniX-OS
~~~~~~~~~~~~~~~~~~~

EOF_ISSUE

# Edit SSH properties
#####################
sed -i 's/#Protocol 2/Protocol 2/g' /etc/ssh/sshd_config
echo "ServerAliveInterval 100" >> /etc/ssh/ssh_config
sed -i 's/^#Banner.*$/Banner \/etc\/issue/g' /etc/ssh/sshd_config

# Disable root mail notifications
#################################
echo "root:		/dev/null" >> /etc/aliases
newaliases >/dev/null


# History search
################
cat >> /etc/inputrc << EOF_INPUTRC
"\e[A": history-search-backward
"\e[B": history-search-forward
EOF_INPUTRC

# MC brief mode for root
########################
install -m 0700 -d /root/.cache/mc
cat > /root/.cache/mc/panels.ini << EOF_MC_ROOT
[New Left Panel]
list_mode=brief
[New Right Panel]
list_mode=brief
EOF_MC_ROOT
chmod 600 /root/.cache/mc/panels.ini

# Add public key for root authorization
#######################################
install -m 0700 -d /root/.ssh
cat > /root/.ssh/authorized_keys << EOF_SSH
EOF_SSH
chmod 600 /root/.ssh/authorized_keys

# Make oxygen-gtk the default GTK+ theme for root
#################################################
cat > /root/.gtkrc-2.0 << EOF_GTK2
include "/usr/share/themes/oxygen-gtk/gtk-2.0/gtkrc"
include "/etc/gtk-2.0/gtkrc"
gtk-theme-name="oxygen-gtk"
EOF_GTK2
mkdir -p /root/.config/gtk-3.0
cat > /root/.config/gtk-3.0/settings.ini << EOF_GTK3
[Settings]
gtk-theme-name = oxygen-gtk
EOF_GTK3

# Create denix wallpaper metadata
#################################
mkdir -p /usr/share/wallpapers/denix/contents/images
for i in 1024x600 1024x768 1152x720 1152x864 1200x900 1280x1024 1280x720 1280x768 1280x800 1280x960 1366x768 1440x1080 1440x900 1600x1200 1600x1280 1680x1050 1920x1080 1920x1200 1920x1440 2048x1536 640x480 800x480 800x600; do
    ln -s /usr/share/backgrounds/denix/flame-gray.png /usr/share/wallpapers/denix/contents/images/$i.png
done
cat > /usr/share/wallpapers/denix/metadata.desktop << EOF_METADATA
[Desktop Entry]
Name=Denix
X-KDE-PluginInfo-Name=Denix
X-KDE-PluginInfo-Author=Denis Salmanovich
X-KDE-PluginInfo-Email=denis.salmanovich@gmail.com
X-KDE-PluginInfo-License=CC-BY-SA
EOF_METADATA

# Create /etc/sysconfig/desktop (needed for installation)
cat > /etc/sysconfig/desktop << EOF_DESKTOP
DESKTOP="KDE"
DISPLAYMANAGER="KDE"
EOF_DESKTOP

# Fix grub2 options
###################
rm -rf /boot/grub2/themes/system
cp -r /usr/share/grub/themes/denix /boot/grub2/themes/system
grub2-mkconfig -o /boot/grub2/grub.cfg

# Set hostname for live cd
##########################
echo "live.os" > /etc/hostname

# Fedora Official Hacks for Live CD
###################################
cat > /etc/rc.d/init.d/livesys << EOF_LIVESYS
#!/bin/bash
#
# live: Init script for live image
#
# chkconfig: 345 00 99
# description: Init script for live image.

. /etc/init.d/functions

if ! strstr "\`cat /proc/cmdline\`" rd.live.image || [ "\$1" != "start" ]; then
    exit 0
fi

if [ -e /.liveimg-configured ] ; then
    configdone=1
fi

exists() {
    which \$1 >/dev/null 2>&1 || return
    \$*
}

touch /.liveimg-configured

# Make sure we don't mangle the hardware clock on shutdown
ln -sf /dev/null /etc/systemd/system/hwclock-save.service

livedir="LiveOS"
for arg in \`cat /proc/cmdline\` ; do
  if [ "\${arg##live_dir=}" != "\${arg}" ]; then
    livedir=\${arg##live_dir=}
    return
  fi
done

# enable swaps unless requested otherwise
swaps=\`blkid -t TYPE=swap -o device\`
if ! strstr "\`cat /proc/cmdline\`" noswap && [ -n "\$swaps" ] ; then
  for s in \$swaps ; do
    action "Enabling swap partition \$s" swapon \$s
  done
fi
if ! strstr "\`cat /proc/cmdline\`" noswap && [ -f /run/initramfs/live/\${livedir}/swap.img ] ; then
  action "Enabling swap file" swapon /run/initramfs/live/\${livedir}/swap.img
fi

mountPersistentHome() {
  # support label/uuid
  if [ "\${homedev##LABEL=}" != "\${homedev}" -o "\${homedev##UUID=}" != "\${homedev}" ]; then
    homedev=\`/sbin/blkid -o device -t "\$homedev"\`
  fi

  # if we're given a file rather than a blockdev, loopback it
  if [ "\${homedev##mtd}" != "\${homedev}" ]; then
    # mtd devs don't have a block device but get magic-mounted with -t jffs2
    mountopts="-t jffs2"
  elif [ ! -b "\$homedev" ]; then
    loopdev=\`losetup -f\`
    if [ "\${homedev##/run/initramfs/live}" != "\${homedev}" ]; then
      action "Remounting live store r/w" mount -o remount,rw /run/initramfs/live
    fi
    losetup \$loopdev \$homedev
    homedev=\$loopdev
  fi

  # if it's encrypted, we need to unlock it
  if [ "\$(/sbin/blkid -s TYPE -o value \$homedev 2>/dev/null)" = "crypto_LUKS" ]; then
    echo
    echo "Setting up encrypted /home device"
    plymouth ask-for-password --command="cryptsetup luksOpen \$homedev EncHome"
    homedev=/dev/mapper/EncHome
  fi

  # and finally do the mount
  mount \$mountopts \$homedev /home
  # if we have /home under what's passed for persistent home, then
  # we should make that the real /home.  useful for mtd device on olpc
  if [ -d /home/home ]; then mount --bind /home/home /home ; fi
  if [ -d /home/liveuser ]; then USERADDARGS="-M" ; fi
}

findPersistentHome() {
  for arg in \`cat /proc/cmdline\` ; do
    if [ "\${arg##persistenthome=}" != "\${arg}" ]; then
      homedev=\${arg##persistenthome=}
      return
    fi
  done
}

if strstr "\`cat /proc/cmdline\`" persistenthome= ; then
  findPersistentHome
elif [ -e /run/initramfs/live/\${livedir}/home.img ]; then
  homedev=/run/initramfs/live/\${livedir}/home.img
fi

# if we have a persistent /home, then we want to go ahead and mount it
if ! strstr "\`cat /proc/cmdline\`" nopersistenthome && [ -n "\$homedev" ] ; then
  action "Mounting persistent /home" mountPersistentHome
fi

# make it so that we don't do writing to the overlay for things which
# are just tmpdirs/caches
mount -t tmpfs -o mode=0755 varcacheyum /var/cache/yum
mount -t tmpfs tmp /tmp
mount -t tmpfs vartmp /var/tmp
[ -x /sbin/restorecon ] && /sbin/restorecon /var/cache/yum /tmp /var/tmp >/dev/null 2>&1

if [ -n "\$configdone" ]; then
  exit 0
fi

# add fedora user with no passwd
action "Adding live user" useradd \$USERADDARGS -c "Live System User" liveuser
passwd -d liveuser > /dev/null

# make liveuser use KDE
echo "startkde" > /home/liveuser/.xsession
chmod a+x /home/liveuser/.xsession
chown liveuser:liveuser /home/liveuser/.xsession

# set autologin for liveuser
sed -i 's/^#AutoLoginEnable=.*$/AutoLoginEnable=true/g' /etc/kde/kdm/kdmrc
sed -i 's/^#AutoLoginUser=.*$/AutoLoginUser=liveuser/g' /etc/kde/kdm/kdmrc

# set up user liveuser as default user and preselected user
sed -i 's/^#PreselectUser=.*$/PreselectUser=Default/g' /etc/kde/kdm/kdmrc
sed -i 's/^#DefaultUser=.*$/DefaultUser=liveuser/g' /etc/kde/kdm/kdmrc

# show liveinst.desktop on desktop and in menu
sed -i 's/NoDisplay=true/NoDisplay=false/' /usr/share/applications/liveinst.desktop

# chmod +x ~/Desktop/liveinst.desktop to disable KDE's security warning
chmod +x /usr/share/applications/liveinst.desktop

# turn off firstboot for livecd boots
systemctl --no-reload disable firstboot-text.service 2> /dev/null || :
systemctl --no-reload disable firstboot-graphical.service 2> /dev/null || :
systemctl stop firstboot-text.service 2> /dev/null || :
systemctl stop firstboot-graphical.service 2> /dev/null || :

# don't use prelink on a running live image
sed -i 's/PRELINKING=yes/PRELINKING=no/' /etc/sysconfig/prelink &>/dev/null || :

# turn off mdmonitor by default
systemctl --no-reload disable mdmonitor.service 2> /dev/null || :
systemctl --no-reload disable mdmonitor-takeover.service 2> /dev/null || :
systemctl stop mdmonitor.service 2> /dev/null || :
systemctl stop mdmonitor-takeover.service 2> /dev/null || :

# don't enable the gnome-settings-daemon packagekit plugin
gsettings set org.gnome.settings-daemon.plugins.updates active 'false' || :

# don't start cron/at as they tend to spawn things which are
# disk intensive that are painful on a live image
systemctl --no-reload disable crond.service 2> /dev/null || :
systemctl --no-reload disable atd.service 2> /dev/null || :
systemctl stop crond.service 2> /dev/null || :
systemctl stop atd.service 2> /dev/null || :
EOF_LIVESYS

cat > /etc/rc.d/init.d/livesys-late << EOF_LIVESYS_LATE
#!/bin/bash
#
# live: Late init script for live image
#
# chkconfig: 345 99 01
# description: Late init script for live image.

. /etc/init.d/functions

if ! strstr "\`cat /proc/cmdline\`" liveimg || [ "\$1" != "start" ] || [ -e /.liveimg-late-configured ] ; then
    exit 0
fi

exists() {
    which \$1 >/dev/null 2>&1 || return
    \$*
}

touch /.liveimg-late-configured

# read some variables out of /proc/cmdline
for o in \`cat /proc/cmdline\` ; do
    case \$o in
    ks=*)
        ks="--kickstart=\${o#ks=}"
        ;;
    xdriver=*)
        xdriver="\${o#xdriver=}"
        ;;
    esac
done

# if liveinst or textinst is given, start anaconda
if strstr "\`cat /proc/cmdline\`" liveinst ; then
   plymouth --quit
   /usr/sbin/liveinst \$ks
fi
if strstr "\`cat /proc/cmdline\`" textinst ; then
   plymouth --quit
   /usr/sbin/liveinst --text \$ks
fi

# configure X, allowing user to override xdriver
if [ -n "\$xdriver" ]; then
   cat > /etc/X11/xorg.conf.d/00-xdriver.conf <<FOE
Section "Device"
	Identifier	"Videocard0"
	Driver	"\$xdriver"
EndSection
FOE
fi
EOF_LIVESYS_LATE

chmod 755 /etc/rc.d/init.d/livesys
/sbin/chkconfig --add livesys

chmod 755 /etc/rc.d/init.d/livesys-late
/sbin/chkconfig --add livesys-late

# work around for poor key import UI in PackageKit
rm -f /var/lib/rpm/__db*

# go ahead and pre-make the man -k cache (#455968)
/usr/bin/mandb

# save a little bit of space at least...
rm -f /boot/initramfs*

# make sure there aren't core files lying around
rm -f /core*


############################################################################
%end #######################################################################
############################################################################

############################################################################
%post --nochroot ###########################################################
############################################################################

# ${INSTALL_ROOT} - Это то что развернется
# ${LIVE_ROOT} - Это то что на диске будет

# Copy splash & configuration file into isolinux directory
##########################################################
cp /usr/share/denix-respin-tools/isolinux/18/splash.jpg ${LIVE_ROOT}/isolinux
cp /usr/share/denix-respin-tools/isolinux/18/live.cfg ${LIVE_ROOT}/isolinux/isolinux.cfg

############################################################################
%end #######################################################################
############################################################################
